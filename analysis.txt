1) collecting assets to check
    - [X] use state db to check position in feedproxy
    - [X] read feedproxy and capture events
    - [X] only capture events that are applicable to the correct assettypes (use base64 encoded short_uri)
    - [X] only capture events that have a context-id
2) check the context-id
    - [ ] check to see if aanlevering is already being tracked
    - [ ] use /eventcontexts/{uuid} to get the description
    - [ ] use the description to search in the DAVIE API using field "vrijeZoekterm"
    - [ ] filter using "aanleveringnummer" and "dossierNummer" ("VWT-CEW-2020-009-5", ...)
    - [ ] save the aanlevering uuid and poll often to check for status 'Goedgekeurd'
3) use validated aanlevering
    - [ ] find all assets that were changed in that aanlevering (wait for EM-3200 or using emson endpoint)
    - [X] collect all related asset information using the asset info collector algorithm
    - [/] generate a report to update legacy data with
      - [ ] relations
      - [ ] attributes
      - [ ] names
      - [ ] creation of new assets
    - [ ] save the report in the state db
    - [ ] at regular intervals, recollect the asset information
4) update legacy data
    - [ ] find reports in state db that have sufficient information to using for updates
    - [ ] update legacy data using the state report until everything is marked as done
    - [ ] update the status of the aanlevering in state db to 'verwerkt'
